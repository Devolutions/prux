name: shared build & deploy workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      ref:
        required: true
        type: string
      tag:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/**
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build prux
        run: cargo build --bin prux --release

      - name: Archive dockerfile
        uses: actions/upload-artifact@v3
        with:
          name: dockerfile
          path: |
            Dockerfile.GH

      - name: Archive prux
        uses: actions/upload-artifact@v3
        with:
          name: prux
          path: |
            target/release/prux

  build-image:
    environment: ${{ inputs.environment }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: devolutionsbot
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfile/Dockerfile.GH
          push: true
          tags: devolutions/prux:${{ inputs.tag }}

      - name: Show image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy-lucid:
    environment: ${{ inputs.environment }}
    if: ${{ inputs.environment == 'staging' }}
    needs: build-image
    runs-on: ubuntu-latest

    steps:
      - name: Check out Devolutions/actions
        uses: actions/checkout@v4
        with:
          repository: Devolutions/actions
          ref: v1
          token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}
          path: ./.github/workflows

      - name: Install Toolbox
        uses: ./.github/workflows/toolbox-install
        with:
          github_token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}

      - name: Trigger lucid deployment on staging
        run: dv github trigger-workflow -b master -r lucid -f staging.yml -i deploy_only=true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_INFRA_PAT }}
